[{"path":[]},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, colour, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualised language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behaviour take appropriate fair corrective action response behaviour deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behaviour may reported community leaders responsible enforcement isakroa@protonmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behaviour, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://isakro.github.io/shoredate/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to shoredate","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to shoredate","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"propose-an-idea","dir":"","previous_headings":"How you can contribute","what":"Propose an idea","title":"Contributing to shoredate","text":"idea new shoredate feature methods used improved? Take look documentation issue list see isn’t included suggested yet. , suggest idea issue GitHub. helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"report-a-bug","dir":"","previous_headings":"How you can contribute","what":"Report a bug","title":"Contributing to shoredate","text":"Discovered bug? Report issue GitHub can fixed. good bug report makes easier handle, please include: operating system name version (e.g. Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"improve-the-documentation","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation","title":"Contributing to shoredate","text":"Noticed typo think function use better example? Good documentation makes difference, help improve welcome. Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"contribute-code","dir":"","previous_headings":"How you can contribute","what":"Contribute code","title":"Contributing to shoredate","text":"Care fix bugs implement new functionality shoredate? look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://isakro.github.io/shoredate/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to shoredate","text":"GitHub flow used development package. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://isakro.github.io/shoredate/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Applying shoredate to other regions","text":"shoredate method underlying developed application constrained region south-eastern Norway, possible apply areas. following presents example Ørland Trøndelag, Central Norway, new displacement curve later parts Holocene recently published (Romundset Lakeman 2019). Furthermore, needed use main functions package shoreline displacement curve describes sea-level change location site dated, elevation value site. Consequently, principle possible extend main functionality package region world method applicable, provided reliable data suitable format available. caveats notes caution added . First method present work regions experienced monotonic non-increasing relative sea-level change. , regions continuous development regressing stable sea-levels. Furthermore, package originally developed applied along Skaggerrak coast south-eastern Norway, functionality applicable elsewhere. function interpolate_curve() involves increasing degree uncertain extrapolation away spatial limit south-eastern Norway one moves, interpolate_curve() create_isobases() fail coordinate reference systems WGS 84 / UTM zone 32N (EPSG:32632). Finally, default method used shoreline dating package based empirically derived estimation relationship coastal Stone Age sites contemporaneous shoreline Skagerrak region south-eastern Norway. Consequently, extent relationship characterises site-sea relationship areas Norway, beyond, therefore undetermined (possible approach assessing relationship areas can found Roalkvam 2023). However, regions characterised monotonically decreasing relative sea-level can reasonably assumed point time location emerged sea defines earliest possible date occupied. Consequently, another option use method find terminus post quem date, outlined main vignette, demonstrated .","code":""},{"path":[]},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"shoreline-displacement-curve-for-ørland","dir":"Articles","previous_headings":"Applying shoredate in Ørland","what":"Shoreline displacement curve for Ørland","title":"Applying shoredate to other regions","text":"Geologically derived displacement curves Norway often reported uniform probability lower upper limit possible elevation sea-level time. also case displacement curve published Ørland. present, required format displacement curves used shoredate therefore data frame columns bce, upperelev, lowerelev name. , upperelev lowerelev denote highest lowest possible elevation sea-level year BCE. Years BCE, defined column bce, given interval equal higher resolution desired resulting shoreline date. probability upper lower elevation limits assumed uniformly distributed. displacement curve Ørland provided shoredate can loaded following code: can plotted displacement_plot(). name adjusted argument target_name something informative, geologically derived displacement curves south-eastern Norway excluded specifying displacement_curves argument, relevance . note made Ørland curve originally published reference highest astronomical tide region (see Romundset Lakeman 2019:66). adjust mean sea-level, difference elevation highest astronomical tide mean sea-level subtracted elevation values. Furthermore, variable uplift rates also relevant area, corrected example. example therefore focuses small area curve developed, can assumed directly applicable. Functionality adjust variable displacement rates shoredate accommodated Skagerrak area function interpolate_curve(). Thus, similar adjustments made areas, present therefore done independently shoredate, adjusted curves can passed.","code":"# The packages ggplot2 and sf are explictly loaded here, instead of using the # package::function() syntax with each function call below. library(ggplot2) library(sf)  # Load shoredate library(shoredate)  # Load the displacement curve for Ørland orland_disp <- get(load(system.file(\"extdata/orland_displacement_curve.rda\",                   package = \"shoredate\"))) ## Warning in readChar(con, 5L, useBytes = TRUE): cannot open compressed file '', probable reason 'No such file or directory' ## Error in readChar(con, 5L, useBytes = TRUE): cannot open the connection # Print the last few rows of the Ørland displacement curve tail(orland_disp) ## Error in eval(expr, envir, enclos): object 'orland_disp' not found displacement_plot(target_curve = orland_disp,                   target_name = \"Displacement curve for Ørland, Central Norway\",                   displacement_curves = NA) ## Error in displacement_plot(target_curve = orland_disp, target_name = \"Displacement curve for Ørland, Central Norway\", : unused arguments (target_curve = orland_disp, target_name = \"Displacement curve for Ørland, Central Norway\")"},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"creating-maps-of-ørland","dir":"Articles","previous_headings":"Applying shoredate in Ørland","what":"Creating maps of Ørland","title":"Applying shoredate to other regions","text":"loaded displacement curve, can directly used shoreline date sites locations applies, provided elevation sites present sea-level known. First create couple fictitious site examples, represented point, maps location demonstrate extendibility target_plot() function. create map Ørland target points located, one can adapt target_plot() function. First, set geometries plotted: done can use target_plot() set plot. Setting naturalearth_basemap TRUE downloads world map https://www.naturalearthdata.com/ using rnaturalearth package. stored temporary folder deleted current R session ended. argument naturalearth_zoom specifies amount cropping done world map, provided targets focal point. argument crs_epsg default, explicitly called highlight different coordinate reference systems can used. Setting argument isobases NA means default isobases pertaining south-eastern Norway excluded plot. Finally, setting target_labels FALSE excludes labelling target points plot, instead handled legend code follow . created base plot, can now manipulated using functions package ggplot2. map displaying location Ørland created, can create second map shows location example points, zoomed Ørland, located tip Fosen peninsula. map fairly simple, can nonetheless useful perform exercise make sure everything looks .","code":"# Create example sites target_points <-  st_sfc(st_point(c(532719, 7065723)),                          st_point(c(532896, 7066260)))  # Set CRS target_points <- st_as_sf(target_points, crs = 32632)  # Add site names target_points$name <- c(\"Example 1\", \"Example 2\") # Load in the limit of the spatial coverage in south-eastern Norway, # which is provided with the package senorway <- st_read(system.file(\"extdata/spatial_limit.gpkg\",                                     package = \"shoredate\"), quiet = TRUE)  # Assign a name to this for the map legend senorway$name <- \"Skagerrak limit\"  # Retrieve the first of the example points, to represent Ørland orland <- target_points[1,] orland$location = \"Ørland\" overview_map <- target_plot(targets = orland,                       naturalearth_basemap = TRUE,                       naturalearth_zoom = c(1000000, 1000000),                       crs_epsg = 32632,                       base_col = \"black\",                       base_fill = \"grey85\",                       isobases = NA,                       target_labels =  FALSE) ## Error in target_plot(targets = orland, naturalearth_basemap = TRUE, naturalearth_zoom = c(1e+06, : unused arguments (naturalearth_basemap = TRUE, naturalearth_zoom = c(1e+06, 1e+06), crs_epsg = 32632, base_col = \"black\", base_fill = \"grey85\", target_labels = FALSE) overview_map <- overview_map +         geom_sf(data = senorway, aes(col = name), fill = NA,                    lwd = 0.5, show.legend = \"polygon\") +         # Replotting the point for Ørland to add it to the legend         geom_sf(data = orland, aes(fill = location),                    col = \"black\", shape = 21,                    size = 3, show.legend = \"point\") +         scale_fill_manual(values = c(\"Ørland\" = \"red\")) +         scale_colour_manual(values = c(\"Skagerrak limit\" = \"red\"),                                guide = guide_legend(                                           override.aes = list(shape = NA))) +         theme(legend.position = \"bottom\",               legend.title = element_blank()) +         ggtitle(paste(\"Location of Ørland relative to the\",                        \"spatial limit in south-eastern Norway\")) ## Error in eval(expr, envir, enclos): object 'overview_map' not found # Create basemap examples_map <- target_plot(targets = target_points,                       naturalearth_basemap = TRUE,                       naturalearth_zoom = c(15000, 10000),                       base_col = \"black\",                       base_fill = \"grey85\",                       isobases = NA) ## Error in target_plot(targets = target_points, naturalearth_basemap = TRUE, : unused arguments (naturalearth_basemap = TRUE, naturalearth_zoom = c(15000, 10000), base_col = \"black\", base_fill = \"grey85\") # Add axis labels and ticks, which are not returned with target_plot() examples_map <- examples_map +       theme(         axis.text.y = element_text(),         axis.text.x = element_text(),         axis.ticks = element_line()) +       coord_sf(datum = st_crs(target_points), expand = FALSE) +       ggtitle(\"Location of example points in Ørland\") ## Error in eval(expr, envir, enclos): object 'examples_map' not found # Call overview map overview_map ## Error in eval(expr, envir, enclos): object 'overview_map' not found # Call map displaying the location of the example points examples_map ## Error in eval(expr, envir, enclos): object 'examples_map' not found"},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"dating-example-sites-in-ørland","dir":"Articles","previous_headings":"Applying shoredate in Ørland","what":"Dating example sites in Ørland","title":"Applying shoredate to other regions","text":"example, raster retrieved Amazon Web Service Terrain Tiles used finding elevation example sites. follows procedure outlined main vignette. plot chunk examples-plot raster loaded can find elevation sites: elevation retrieved shoreline_date() raster passed elevation argument sites dated provided spatial geometries. However, illustrate point needed use shoreline_date() displacement curve knowledge elevations, function called providing displacement curve providing character vector name sites numerical vector elevations: plot chunk orland-dateplot","code":"# Retrieve raster target_wgs84 <- st_transform(target_points, crs = 4326) elev_raster <- elevatr::get_elev_raster(target_wgs84, z = 14,                                         verbose = FALSE, src = \"aws\") elev_raster <- terra::project(terra::rast(elev_raster), \"epsg:32632\")  # Plot the raster and sites for inspection terra::plot(elev_raster) plot(target_points, col = \"black\", add = TRUE) text(st_coordinates(target_points) - 50, labels = target_points$name) terra::extract(elev_raster, terra::vect(target_points))[, -1] ## [1] 17.74340 19.53946 target_dates <- shoreline_date(sites = c(\"Example 1\", \"Example 2\"),                                target_curve = orland_disp,                                elevation = c(17.7, 19.5)) ## Error in shoreline_date(sites = c(\"Example 1\", \"Example 2\"), target_curve = orland_disp, : unused argument (target_curve = orland_disp) # Plot the results shoredate_plot(target_dates, multiplot = TRUE)"},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"finding-the-earliest-possible-date","dir":"Articles","previous_headings":"Applying shoredate in Ørland","what":"Finding the earliest possible date","title":"Applying shoredate to other regions","text":"mentioned, implementation assumes relationship sites shoreline characterised gamma function identified sites south-eastern Norway. present, adjustment possible assumed relationship changing parameters gamma function calling shoreline_date(), using argument model_parameters. However, alternative also possible perform dating procedure without accounting distance site contemporaneous shoreline. done setting parameter model “none” calling shoreline_date(). thus effectively provides termnius post quem date, assumption earliest possible date site use location site emerged sea. terminus post quem date limits inferential steps can taken, might appropriate apply shoreline dating manner regions relationship sites shoreline unknown. can potentially also extended dating phenomena rock art, cases relationship less certain (see e.g. Sognnes 2003). Furthermore, also possible reverse logic regions instead subject relative sea-level rise, date location inundated can provide terminus ante quem date – latest possible date use site. However, implementation shoredate regions experienced continuous disjoint phases relative sea-level rise remains developed.","code":"# Finding the earliest possible date for the first example point earliest_date <- shoreline_date(target_points[1,],                                 target_curve = orland_disp,                                 elevation = elev_raster,                                 model = \"none\",                                 hdr_prob = 1) ## Error in shoreline_date(target_points[1, ], target_curve = orland_disp, : unused argument (target_curve = orland_disp) # Call to plot shoredate_plot(earliest_date, site_name = TRUE) ## Error in eval(expr, envir, enclos): object 'earliest_date' not found"},{"path":"https://isakro.github.io/shoredate/articles/extending-shoredate.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Applying shoredate to other regions","text":"Roalkvam, . 2023 simulation-based assessment relation Stone Age sites relative sea-level change along Norwegian Skagerrak coast. Quaternary Science Reviews 299:107880. DOI: 10.1016/j.quascirev.2022.107880 Romundset, . Lakeman, T.R. 2019. Shoreline displacement Ørland since 6000 cal. yr BP. Environment Settlement: Ørland 600 BC – AD 1250: Archaeological Excavations Vik, Ørland Main Air Base, edited Ystgaard, . Cappelen Damm Akademisk, Oslo, pp. 51–67. DOI: 10.23865/noasp.89 Sognnes, K. 2003. Shoreline Dating Rock Art. Acta Archaeologica 74:189–209. DOI: 10.1111/j.0065-001X.2003.aar740104.x","code":""},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"concept dating sites based present-day elevation reference past shoreline displacement important tool archaeologists northern Scandinavia since early 1900s (e.g. Brøgger 1905). based observation Stone Age sites region tend located close contemporaneous shoreline use. Furthermore, following retreat Fennoscandian Ice Sheet, isostatic uplift severe despite corresponding eustatic sea-level rise, relative sea-level falling throughout prehistory large parts region. Within given area case, general pattern thus older sites located higher altitudes younger sites. vignette describes R package shoredate provides tools shoreline dating Stone Age sites located Norwegian Skagerrak coast using approach presented Roalkvam (2023). based empirical evaluation likely elevation sites sea-level use, local trajectory past relative sea-level change. Due geographical contingency method, dependency geological reconstructions shoreline displacement, functionality package developed purposes dating coastal sites located region stretching Horten county north east, Arendal county south west. However, second vignette, ways core functionality package applied areas world presented.","code":""},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"geographical-and-temporal-coverage","dir":"Articles","previous_headings":"Introduction","what":"Geographical and temporal coverage","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"Shoreline dating Stone Age sites northern Scandinavia based premise coastal sites within region tend located close shoreline use. reconstructing past trajectory shoreline displacement, thus allows us ascribe approximate date sites use, based present-day elevation. method therefore dependent local relative sea-level change likely elevation sites sea-level use. method dependent good geological reconstructions shoreline displacement, full functionality shoredate present limited applicable region south-eastern Norway Horten north east Arendal south west. region recently compiled shoreline displacement curves Skoppum Horten (Romundset 2021), Gunnarsrød Porsgrunn (Sørensen et al. 2014a; Sørensen et al. prep), Hanto Tvedestrand (Romundset 2018; Romundset et al. 2018) Bjørnebu Arendal (Romundset 2018). region also formed study area Roalkvam (2023), specification method parameters used derived. core spatial coverage shoredate indicated maps . plot chunk limit Furthermore, human occupation Norway occurred time retreat Fennoscandian Ice Sheet, oldest known sites dated around 9300 BCE (e.g. Glørstad 2016). 9469 BCE latest start date among geologically derived displacement curves region, thus marks oldest possible age achieve shoredate , although sites yet known old. site elevation implies date older latest start date displacement curves, date returned NA warning given. Roalkvam (2023) study found sites tend situated removed variable distances shoreline around 2500 BCE. default, therefore marks upper limit method, dates start date 2500 BCE returned NA.","code":""},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"installing-and-loading-shoredate","dir":"Articles","previous_headings":"Introduction","what":"Installing and loading shoredate","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"package can installed CRAN: development version package can installed GitHub repository. requires devtools package. Note development version can unstable. installed package can loaded.","code":"install.packages(\"shoredate\") # Uncomment and run to install devtools # install.packages(\"devtools\")  # Installation requires devtools devtools::install_github(\"isakro/shoredate\", build_vignettes = TRUE) library(shoredate)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"interpolating-shoreline-displacement-to-a-site-location","dir":"Articles","previous_headings":"","what":"Interpolating shoreline displacement to a site location","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"function shoreline_date() forms basis shoredate, presented detail . Unless pre-compiled displacement curve provided calling shoreline_date(), trajectory shoreline displacement location sites dated interpolated hood. based four different geological reconstructions shoreline displacement along Norwegian Skagerrak coat. displacement curves associated shoreline isobase indicates contours along relative sea-level change followed trajectory. variation rate sea-level change mainly determined degree isostatic uplift, higher along gradient runs south west north east within region. shoreline displacement curve given location within region interpolated using interpolate_curve() command, using inverse distance weighting, distance four isobases weighted square inverse distances. Note spatial geometries representing sites interpolate_curve() applied must set coordinate reference system (CRS) WGS 84 / UTM zone 32N (EPSG:32632). Furthermore, warning given one attempts interpolate trajectory shoreline displacement site located outside spatial extent outlined . However, might still use-cases useful extrapolate method outside limit, procedure still performed (see second vignette Applying shoredate regions suggestions apply package entirely different regions). visualise interpolated curve alongside geological reconstructions, can passed displacement_plot(). simple map showing location one target sites relative isobases can also displayed using command target_plot(). plot chunk plot_location","code":"# Create example point using the required coordinate system target_point <- sf::st_sfc(sf::st_point(c(517250, 6527250)), crs = 32632)  # Interpolate the displacement curve target_curve <- interpolate_curve(target_point) target_plot(target_point) # The opactity of the geological displacement curves is reduced with # displacement_alpha displacement_plot(target_curve, displacement_alpha = 0.4) ## Error in displacement_plot(target_curve, displacement_alpha = 0.4): unused argument (displacement_alpha = 0.4)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"shoreline-dating","dir":"Articles","previous_headings":"","what":"Shoreline dating","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"following section outlines perform shoreline dating ways visualise results. Various parameters helper-functions underlying dating procedure also presented, along ways manipulate one wishes explore sensitivity dates believe parameters defaults sensible given setting.","code":""},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"dating-a-single-site","dir":"Articles","previous_headings":"Shoreline dating","what":"Dating a single site","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"perform basic shoreline date, site provided spatial sf object shoreline displacement interpolated location. addition , elevation site present sea-level provided. can either done manually specifying elevation, providing elevation raster (see ), case elevation site derived raster, provided site given spatial object. Roalkvam (2023) found vertical distance sites contemporaneous shoreline within study region reasonably approximated gamma distribution. forms foundation implementation shoreline dating package. results can plotted using shoredate_plot() command: plot chunk plot_example blue gamma distribution y-axis indicates likely elevation site sea-level use, described empirically derived gamma distribution parameters shape (\\(\\alpha\\)) = 0.286 scale (\\(\\sigma\\)) = 20.833. parameters can adjusted specifying values passed model_parameters calling shoreline_date(). red envelope shoreline displacement curve interpolated site location interpolate_curve(), run hood curve provided target_curve argument shoreline_date(). Transferring probability gamma distribution calendar scale using displacement curve gives resulting shoreline date grey, underlined 95% highest density region (HDR) black. coverage HDR can adjusted hdr_prob parameter. dating procedure involves stepping cumulative version gamma distribution, step subtracting probability previous step current one. probability step divided uniformly across calendar years range lower upper limit displacement curve. default resolution calendar scale 10 years, can adjusted specifying cal_reso argument. gamma distribution stepped using increments 0.01m, can adjusted using argument elev_reso. default, resulting shoreline date normalised sum unity. function shoreline_date() returns object class shoreline_date. calling object dates printed console, displaying site name, site elevation HDR date. Furthermore, first column data frame beyond geom column holding sf geometry used site names. column present, sites simply numbered passed shoreline_date(). range graphical parameters can adjusted change appearance output plot, setting greyscale = TRUE offers short-cut plot date greyscale: plot chunk greyscale sparse version can also plotted specifying elements excluded plot: plot chunk sparse","code":"# Date the example point, manually specifying it's elevation target_date <- shoreline_date(target_point, elevation = 58.5) shoredate_plot(target_date) target_date ## =============== ## Site:  1 ## Elevation:  58.5  ##  ## 95% HDR: ## 8600 BCE-6900 BCE ## 5730 BCE-5070 BCE shoredate_plot(target_date,  greyscale = TRUE) shoredate_plot(target_date, elevation_distribution = FALSE,                displacement_curve = FALSE, highest_density_region = FALSE)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"finding-the-terminus-post-quem-date","dir":"Articles","previous_headings":"Shoreline dating","what":"Finding the terminus post quem date","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"also possible account likely distance site shoreline. done setting model parameter “none” calling shoreline_date(). thus effectively provides termnius post quem date, earliest possible date site use, assumption sea receded site location marks earliest possible point time occupation site.","code":"# Date the example point, manually specifying it's elevation and setting the # HDR coverage to 1. tpq_date <- shoreline_date(target_point,                            elevation = 58.5,                            model = \"none\",                            hdr_prob = 1)  # Plot and adjust the position of the HDR label on the y-axis shoredate_plot(tpq_date, hdr_label_yadj = 0.6) ## Error in shoredate_plot(tpq_date, hdr_label_yadj = 0.6): unused argument (hdr_label_yadj = 0.6)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"dating-multiple-sites","dir":"Articles","previous_headings":"Shoreline dating","what":"Dating multiple sites","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"exemplified code chunks follow, also possible date multiple sites . plot chunk multipoint dating multiple sites can useful track progress setting verbose = TRUE print progress console (output reproduced ). default behaviour passing multiple dates shoredate_plot() plot series individual plots. However, setting multiplot = TRUE collapses dates single, sparse plot. sites ordered earliest latest possible start date occupation sites. plot chunk multiplot","code":"# Create multiple example points to be dated target_points <- sf::st_sfc(sf::st_point(c(576052, 6567955)),                               sf::st_point(c(554212, 6538835)),                               sf::st_point(c(516599, 6512142)))  # Specify the correct CRS and make the points a sf data frame to be able to # add the column below target_points <- sf::st_as_sf(target_points, crs = 32632)  # Adding example site names target_points$names <- c(\"Site 1\", \"Site 2\", \"Site 3\")  # Create a plot showing the location of the points within the spatial limit target_plot(target_points) # Dating the target points, specifying the elevations in a # vector of numeric values target_dates <- shoreline_date(target_points,                                elevation = c(68, 98, 73),                                verbose = TRUE) # Print results target_dates ## =============== ## Site:  Site 1 ## Elevation:  68  ##  ## 95% HDR: ## 7630 BCE-6110 BCE ## 6000 BCE-5430 BCE ## =============== ## Site:  Site 2 ## Elevation:  98  ##  ## 95% HDR: ## 9020 BCE-8470 BCE ## =============== ## Site:  Site 3 ## Elevation:  73  ##  ## 95% HDR: ## 9170 BCE-8340 BCE shoredate_plot(target_dates, multiplot = TRUE)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"using-an-elevation-raster-to-find-site-elevations","dir":"Articles","previous_headings":"Shoreline dating","what":"Using an elevation raster to find site elevations","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"code demonstrates find elevation one sites passing digital elevation model (DEM) shoreline_date(). example uses data Amazon Web Service Terrain Tiles, retrieved package elevatr. However, best elevation data available study area can retrieved freely Norwegian Mapping Authority https://hoydedata./LaserInnsyn2/. use shoredate, manually download raster covering location sites dated read R terra::rast() passing shoreline_date(). plot chunk retrieve_raster SpatRaster loaded R session can passed shoreline_date() specifying elevation argument. used find site elevations without provide manually, done . Note site represented object spatial extent (.e. point feature) default use mean elevation raster. can changed elev_fun argument accepts function can passed fun argument terra::extract() (see ?terra::extract).","code":"# Reproject target_point for retrieving raster data with elevatr target_wgs84 <- sf::st_transform(target_point, crs = 4326)  # Retrieve raster data elev_raster <- elevatr::get_elev_raster(target_wgs84, z = 14,  src = \"aws\") ## Warning in matrix(unlist(x, use.names = FALSE), nrow = length(x), byrow = TRUE, : data length [3] is not a sub-multiple or multiple of the number of rows [2] # Make the retrieved raster a SpatRaster and re-project # it to the correct coordinate system elev_raster <- terra::project(terra::rast(elev_raster), \"epsg:32632\")  # Plot the raster and target point for inspection terra::plot(elev_raster) plot(target_point, add = TRUE) raster_date <- shoreline_date(target_point, elevation = elev_raster)  # Print to console raster_date ## =============== ## Site:  1 ## Elevation:  58.47393  ##  ## 95% HDR: ## 8600 BCE-6890 BCE ## 5730 BCE-5070 BCE"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"summed-probability-distribution-of-shoreline-dates","dir":"Articles","previous_headings":"","what":"Summed probability distribution of shoreline dates","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"Using sum_shoredates() also possible sum probability multiple shoreline dates evaluate temporal intensity dates, frequently done calibrated radiocarbon dates (e.g. Crema Bevan 2021). note procedure involves collapsing frequency dates uncertainty, interpretation resulting sum straightforward, ’s shape determined number sites also trajectory shoreline displacement (see e.g. Bronk Ramsey 2017; Crema 2022 perspectives ways approach issue context radiocarbon dates). simple line plot displaying resulting summed probability can produced shoredate_sumplot(). plot chunk sum_plot","code":"# Sum the three dates from above summed_dates <- sum_shoredates(target_dates) shoredate_sumplot(summed_dates)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"direction-of-shoreline-gradient","dir":"Articles","previous_headings":"","what":"Direction of shoreline gradient","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"direction shoreline gradient specified isobases run perpendicular gradient. interpolating displacement curve used dating site, direction isobases defaults 327\\(^\\circ\\), following Romundset et al. (2018:180, fig.1). However, authors operate different isobase directions, Sørensen et al. (2014:fig.2.2.3) using 338\\(^\\circ\\). Furthermore, direction uplift gradient might varied throughout Holocene (Sørensen et al. 2014:42–44).","code":""},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"specifying-different-isobase-directions","dir":"Articles","previous_headings":"Direction of shoreline gradient","what":"Specifying different isobase directions","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"range typically employed isobase directions generally result minor differences resulting shoreline dates, possible specify multiple directions , perform shoreline dating using individual direction. can useful either evaluating sensitivity date one believes reason suspect different direction default particular case. call plot can specified direction isobases printed date. Note possible use multiplot used multiple isobase directions dating sites. following thus also shows default behaviour plotting multiple dates setting multiplot = TRUE.","code":"# Add a name to the example site target_point <- sf::st_as_sf(target_point, crs = 32632) target_point$name <- \"Example site\"  # Using the same target point and elevation as above, but specifying two # different directions for the isobases when dating iso_date <- shoreline_date(site = target_point, elevation = elev_raster,                            isobase_direction = c(325, 338))  iso_date ## =============== ## Site:  Example site ## Elevation:  58.47393  ##  ## Isobase direction:  325  ##  ## 95% HDR: ## 8610 BCE-6900 BCE ## 5710 BCE-5070 BCE ##  ## Isobase direction:  338  ##  ## 95% HDR: ## 8560 BCE-6900 BCE ## 5810 BCE-5070 BCE shoredate_plot(iso_date,                site_name = TRUE,                isobase_direction = TRUE,                hdr_label_yadj = 0.35) ## Error in shoredate_plot(iso_date, site_name = TRUE, isobase_direction = TRUE, : unused argument (hdr_label_yadj = 0.35)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"sum-the-probability-of-dates-across-isobase-directions","dir":"Articles","previous_headings":"Direction of shoreline gradient","what":"Sum the probability of dates across isobase directions","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"alternative keeping two shoreline dates site separate, parameter sum_isobase_directions can set TRUE calling shoreline_date() sum probability dates. , default normalised sum unity. can passed shoredate_plot(). Note interpolated displacement curves gamma distribution elevation site sea-level included plot summing probability dates across isobase directions. plot chunk plot_sum_isobases","code":"sum_iso_date <- shoreline_date(site = target_point,                                elevation = elev_raster,                                isobase_direction = c(325, 338),                                sum_isobase_directions = TRUE)  sum_iso_date ## =============== ## Site:  Example site ## Elevation:  58.47393  ##  ## Sum of isobase directions:  325 338  ##  ## 95% HDR: ## 8610 BCE-6880 BCE ## 5770 BCE-5060 BCE shoredate_plot(sum_iso_date, site_name = TRUE, isobase_direction = TRUE)"},{"path":"https://isakro.github.io/shoredate/articles/shoredate.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"shoredate: Shoreline dating Stone Age sites on the Norwegian Skagerrak coast","text":"Bronk Ramsey, C. 2017. Methods Summarizing Radiocarbon Datasets. Radiocarbon 59(6):1809–1833. DOI: 10.1017/RDC.2017.108 Brøgger, W.C. 1905 Strandliniens beliggenhed stenalderen det sydøstlige Norge. Geological Survey Norway, Kristiania. URI: https://hdl.handle.net/11250/2675184 Crema, E. Bevan, . 2021. Inference Large Sets Radiocarbon Dates: Software Methods. Radiocarbon 61(1):23–39. DOI: 10.1017/RDC.2020.95 Crema, E. 2022. Statistical Inference Prehistoric Demography Frequency Distributions Radiocarbon Dates: Review Guide Perplexed. Journal Archaeological Method Theory 29:1387-1418. DOI: 10.1007/s10816-022-09559-5 Glørstad, H. 2016. Deglaciation, sea-level change Holocene colonization Norway. Geological Society, London, Special Publications 411(1):9–25. DOI: 10.1144/SP411.7 Roalkvam, . 2023 simulation-based assessment relation Stone Age sites relative sea-level change along Norwegian Skagerrak coast. Quaternary Science Reviews 299:107880. DOI: 10.1016/j.quascirev.2022.107880 Romundset, . 2018. Postglacial shoreline displacement Tvedestrand–Arendal area. Stone Age Coastal Settlement Aust-Agder, Southeast Norway, edited Reitan, G. Sundström, L.. Cappelen Damm Akademisk, Oslo, pp. 463–478. DOI: 10.23865/noasp.50 Romundset, . 2021. Resultater fra NGUs undersøkelse av etteristidas strandforskyvning nord Vestfold. Geological Survey Norway, Trondheim. Romundset, ., Lakeman, T.R. Høgaas, F. 2018. Quantifying variable rates postglacial relative sea level fall cluster 24 isolation basins southern Norway. Quaternary Science Reviews 197:175e192. DOI: 10.1016/ j.quascirev.2018.07.041 Sørensen, R, Henningsmoen, K.E. Høeg, H.. Gälman V. 2023. Holocen vegetasjonshistorie og landhevning søndre Vestfold og sørøstre Telemark. Stone Age Telemark. Archaeological Results Scientific Analysis Vestfoldbaneprosjektet E18 Rugtvedt–Dørdal, edited Persson, P. Solheim, S., press. Sørensen, R, Henningsmoen, K.E. Høeg, H.. Gälman V. 2014. Holocene landhevningsstudier søndre Vestfold og sørøstre Telemark – Revidert kurve. Vestfoldbaneprosjektet. Arkeologiske undersøkelser forbindelse med ny jernbane mellom Larvik og Porsgrunn. Bind 1, edited Melvold, S. Persson, P. Portal forlag, Kristiansand, pp. 36–47. DOI: 10.23865/noasp.61","code":""},{"path":"https://isakro.github.io/shoredate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isak Roalkvam. Author, maintainer.","code":""},{"path":"https://isakro.github.io/shoredate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roalkvam, Isak (2023). shoredate: R package shoreline dating coastal Stone Age sites. Journal Open Source Software, 8(85), 5337. DOI: https://doi.org/10.21105/joss.05337","code":"@Article{,   title = {shoredate: An R package for shoreline dating coastal Stone Age sites},   author = {Isak Roalkvam},   journal = {Journal of Open Source Software},   year = {2023},   volume = {8},   issue = {85},   pages = {5337},   url = {https://doi.org/10.21105/joss.05337}, }"},{"path":"https://isakro.github.io/shoredate/index.html","id":"shoredate-an-r-package-for-shoreline-dating-coastal-stone-age-sites","dir":"","previous_headings":"","what":"Shoreline Dating Coastal Stone Age Sites","title":"Shoreline Dating Coastal Stone Age Sites","text":"package shoredate offers methods shoreline date coastal Stone Age sites based present-day elevation trajectory past relative sea-level change. Shoreline dating based premise coastal Stone Age sites large parts Fennoscandia located close shoreline use. package method implemented originally developed Norwegian Skagerrak coast south-eastern Norway, based empirically derived estimate likely elevation sites sea-level occupied (Roalkvam 2023). package offers ways extend adjust method application areas, ways degree procedures directly applicable elsewhere largely undetermined likely vary contexts. Furthermore, extensions currently limited regions characterised monotonic trajectory relative sea-level regression. also note method dependent regularities human behaviour, Roalkvam (2023) study provides initial formalisation method, hefted unexplored uncertainties, also within core area developed. sum therefore, dates achieved package treated care.","code":""},{"path":"https://isakro.github.io/shoredate/index.html","id":"installation-and-loading","dir":"","previous_headings":"","what":"Installation and loading","title":"Shoreline Dating Coastal Stone Age Sites","text":"shoredate can installed CRAN : latest development version can installed GitHub using devtools: installed package can loaded:","code":"install.packages(\"shoredate\") # install.packages(\"devtools\") devtools::install_github(\"isakro/shoredate\", build_vignettes = TRUE) library(shoredate)"},{"path":"https://isakro.github.io/shoredate/index.html","id":"geographical-and-temporal-coverage","dir":"","previous_headings":"","what":"Geographical and temporal coverage","title":"Shoreline Dating Coastal Stone Age Sites","text":"method shoreline dating determined relative sea-level change, dependent reliable geological reconstructions development. method outlined originally developed Skagerrak region south-eastern Norway – extending Horten north east Arendal south west (see figure ). region newly compiled shoreline displacement curves Horten (Romundset 2021), Porsgrunn (Sørensen et al. 2014; Sørensen et al. 2023), Tvedestrand (Romundset 2018; Romundset et al. 2018) Arendal (Romundset 2018). region also formed study area Roalkvam (2023), method parameters derived. remainder document main vignette focuses area. , however, possible adapt procedures application regions, outlined second vignette. first figure shows location spatial limit within method originally derived. shoreline isobases second figure represent contours along shoreline displacement followed trajectory. correspond displacement curves place names third figure, also indicates temporal coverage method within region.  human occupation occurred time retreat Fennoscandian Ice Sheet, currently oldest known sites Norway around 9300 BCE (e.g. Glørstad 2016). Although sites yet known old, earliest possible age achieve shoredate Skagerrak region south-eastern Norway 9469 BCE, marks latest start date among employed displacement curves. site elevation implies date older , returned NA warning given. Roalkvam (2023) found sites study region tend located close shoreline around transition Late Neolithic, c. 2500 BCE, thus marks upper limit applicability method region. date later start date therefore returned NA warning, default settings. temporal range indicated dashed lines plot displays shoreline displacement curves. Additionally, probability date extends beyond 1950 CE (0 cal BP), thus indicating site location present-day sea-level, overshooting probability cut date normalised sum unity.","code":""},{"path":"https://isakro.github.io/shoredate/index.html","id":"interpolating-shoreline-displacement-to-a-site-location","dir":"","previous_headings":"","what":"Interpolating shoreline displacement to a site location","title":"Shoreline Dating Coastal Stone Age Sites","text":"shoreline date site, reconstruction local shoreline displacement necessary. currently four reliable geological displacement curves available within study area. associated shoreline isobase, along trajectory relative sea-level change . find local displacement curve, curves interpolated site location using inverse distance weighting, default weigh interpolation square inverse distance site isobases.   Unless pre-compiled curve provided, interpolation performed hood site calling shoreline_date(), function performs shoreline dating procedure.","code":"# Create example point using the coordinate system required for the  # interpolation procedure: WGS84 / UTM zone 32N (EPSG: 32632) target_point <- sf::st_sfc(sf::st_point(c(538310, 6544255)), crs = 32632)  # Create a simple map showing the target location relative to the isobases # of the displacement curves target_plot(target_point) # Interpolate shoreline displacement curve for the target location target_curve <- interpolate_curve(target_point)  # Plot displaying the interpolated curve, reducing the opacity of the # geological displacement curves. displacement_plot(target_curve, displacement_alpha = 0.4)"},{"path":"https://isakro.github.io/shoredate/index.html","id":"shoreline-dating-a-site","dir":"","previous_headings":"","what":"Shoreline dating a site","title":"Shoreline Dating Coastal Stone Age Sites","text":"basic example outlining date single site manually specifying site elevation. default settings used dating procedure plotting resulting shoreline date.  blue gamma distribution y-axis represents likely elevation site sea-level use, described empirically derived gamma function parameters α (shape) = 0.286 σ (scale) = 20.833. starts elevation site. red envelope shoreline displacement curve interpolated site location. probability gamma distribution transferred calendar scale using displacement curve. gives resulting shoreline date grey, underlined 95% highest density region (HDR) black (see Roalkvam 2023 details). default, shoreline date normalised sum unity. default resolution calendar scale 10 years. Calling date object, custom class shoreline_date, prints name site, elevation HDR: first column data frame beyond geometry spatial objects taken represent site names. column exist, sites simply numbered passed shoreline_date().","code":"# Using the example point from above and specifying it's elevation target_date <- shoreline_date(site = target_point, elevation = 70)  # Call to plot shoredate_plot(target_date) target_date #> =============== #> Site:  1 #> Elevation:  70  #>  #> 95% HDR: #> 8610 BCE-6910 BCE #> 5880 BCE-5100 BCE"},{"path":"https://isakro.github.io/shoredate/index.html","id":"further-documentation","dir":"","previous_headings":"","what":"Further documentation","title":"Shoreline Dating Coastal Stone Age Sites","text":"procedures outlined focused basic functions default behaviours package dating single site area package originally developed. usage detailed walk-, see main vignette calling vignette(\"shoredate\") accessing website. Furthermore, second vignette can accessed vignette(\"extending-shoredate\") viewed website, builds main vignette outlines ways package can applied regions.","code":""},{"path":"https://isakro.github.io/shoredate/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Shoreline Dating Coastal Stone Age Sites","text":"Glørstad, H. 2016. Deglaciation, sea-level change Holocene colonization Norway. Geological Society, London, Special Publications 411(1):9–25. DOI: 10.1144/SP411.7 Romundset, . 2018. Postglacial shoreline displacement Tvedestrand–Arendal area. Stone Age Coastal Settlement Aust-Agder, Southeast Norway, edited Reitan, G. Sundström, L. Cappelen Damm Akademisk, Oslo, pp. 463–478. DOI: 10.23865/noasp.50 Romundset, . 2021. Resultater fra NGUs undersøkelse av etteristidas strandforskyvning nord Vestfold. Geological Survey Norway, Trondheim. Romundset, ., Lakeman, T.R. Høgaas, F. 2018. Quantifying variable rates postglacial relative sea level fall cluster 24 isolation basins southern Norway. Quaternary Science Reviews 197:175e192. DOI: 10.1016/ j.quascirev.2018.07.041 Roalkvam, . 2023. simulation-based assessment relation Stone Age sites relative sea-level change along Norwegian Skagerrak coast. Quaternary Science Reviews 299:107880. DOI: 10.1016/j.quascirev.2022.107880 Sørensen, R, Henningsmoen, K.E. Høeg, H.. Gälman V. 2023. Holocen vegetasjonshistorie og landhevning søndre Vestfold og sørøstre Telemark. Stone Age Telemark. Archaeological Results Scientific Analysis Vestfoldbaneprosjektet E18 Rugtvedt–Dørdal, edited Persson, P. Solheim, S., press. Sørensen, R, Henningsmoen, K.E. Høeg, H.. Gälman V. 2014. Holocene landhevningsstudier søndre Vestfold og sørøstre Telemark – Revidert kurve. Vestfoldbaneprosjektet. Arkeologiske undersøkelser forbindelse med ny jernbane mellom Larvik og Porsgrunn. Bind 1, edited Melvold, S. Persson, P. Portal forlag, Kristiansand, pp. 36–47. DOI: 10.23865/noasp.61","code":""},{"path":"https://isakro.github.io/shoredate/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Shoreline Dating Coastal Stone Age Sites","text":"Contributions suggestions improvement welcome. Instructions contributing can found Guide Contributing. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://isakro.github.io/shoredate/reference/create_isobases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","title":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","text":"Function create isobases interpolating shoreline displacement curves within spatial coverage south-eastern Norway. done centre points supplied displacement curves. Isobases can also created multiple directions, useful testing sensitivity dates direction isobases.","code":""},{"path":"https://isakro.github.io/shoredate/reference/create_isobases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","text":"","code":"create_isobases(isobase_direction)"},{"path":"https://isakro.github.io/shoredate/reference/create_isobases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","text":"isobase_direction numerical vector holding single multiple directions isobases.","code":""},{"path":"https://isakro.github.io/shoredate/reference/create_isobases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","text":"simple feature holding isobases represented lines.","code":""},{"path":"https://isakro.github.io/shoredate/reference/create_isobases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create isobases with different directions within the spatial coverage in\nsouth-eastern Norway — create_isobases","text":"","code":"# Create isobases in a specified direction isobases <- create_isobases(327) plot(sf::st_geometry(isobases))   # Create isobases using different directions isobases <- create_isobases(c(327, 338))  # Plot for visualisation plot(sf::st_geometry(isobases))"},{"path":"https://isakro.github.io/shoredate/reference/displacement_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot shoreline displacement curves — displacement_plot","title":"Plot shoreline displacement curves — displacement_plot","text":"Function plotting shoreline displacement curves. Calling plot without providing target curve display four underlying geologically derived displacement curves.","code":""},{"path":"https://isakro.github.io/shoredate/reference/displacement_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot shoreline displacement curves — displacement_plot","text":"","code":"displacement_plot(   target_curve = NA,   displacement_curves = c(\"Horten\", \"Porsgrunn\", \"Tvedestrand\", \"Arendal\"),   target_name = \"Target curve\",   target_line = \"solid\",   target_col = \"red\",   target_alpha = 1,   displacement_line = c(Horten = \"solid\", Porsgrunn = \"solid\", Tvedestrand = \"solid\",     Arendal = \"solid\"),   displacement_col = c(Horten = \"darkorange\", Porsgrunn = \"darkgreen\", Tvedestrand =     \"blue\", Arendal = \"black\"),   displacement_alpha = 1,   greyscale = FALSE )"},{"path":"https://isakro.github.io/shoredate/reference/displacement_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot shoreline displacement curves — displacement_plot","text":"target_curve Data frame holding shoreline displacement curve. displacement_curves Character vector specifying geologically informed displacement curves plotted. Accepted values c(\"Horten\", \"Porsgrunn\", \"Tvedestrand\", \"Arendal\"). included default. target_name Character value specifying name given target curve, provided. Defaults \"Target curve\". target_line Character value specifying line type used target curve, provided. Defaults \"solid\". target_col Character value specifying colour used target curve, provided. Defaults \"red\". target_alpha Numerical value specifying alpha value used target curve, provided. Defaults 1. displacement_line Character vector specifying line types used geological displacement curves plotted. Defaults c(\"Horten\" = \"solid\", \"Porsgrunn\" = \"solid\", \"Tvedestrand\" = \"solid\", \"Arendal\" = \"solid\"). displacement_col Character vector specifying colours used geological displacement curves plotted. Defaults c(\"Horten\" = \"darkorange\", \"Porsgrunn\" = \"darkgreen\", \"Tvedestrand\" = \"blue\", \"Arendal\" = \"black\"). displacement_alpha Numerical value specifying alpha value used geological displacement curves plotted. Defaults 1. greyscale Logical value indicating whether plot greyscale . Defaults FALSE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/displacement_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot shoreline displacement curves — displacement_plot","text":"plot displaying underlying shoreline displacement curves , provided, target curve.","code":""},{"path":"https://isakro.github.io/shoredate/reference/displacement_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot shoreline displacement curves — displacement_plot","text":"","code":"# Empty plot for speed displacement_plot(displacement_curves = \"\")"},{"path":"https://isakro.github.io/shoredate/reference/interpolate_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","title":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","text":"Interpolate trajectory past shoreline displacement target location within spatial coverage Skagerrak coast south-eastern Norway. based distance location shoreline isobases geologically derived displacement curves done using inverse distance weighting.","code":""},{"path":"https://isakro.github.io/shoredate/reference/interpolate_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","text":"","code":"interpolate_curve(   target,   isobases = NA,   power = 2,   cal_reso = 10,   verbose = FALSE )"},{"path":"https://isakro.github.io/shoredate/reference/interpolate_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","text":"target spatial target location new displacement curve interpolated. isobases 4 spatial lines representing shoreline isobases existing displacement curves. Multiple sets 4 isobases different isobase directions can provided (see create_isobases()). Defaults isobases direction 327. power numerical value indicating inverse distance power IDW. Defaults 2. cal_reso numerical value specifying resolution use calendar scale. Defaults 10. verbose Logical value indicating whether progress printed console. Defaults FALSE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/interpolate_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","text":"Returns list holding interpolated displacement curve isobase direction. displacement curve represented data frame columns bce negative values indicate years BCE positive CE, lowerelev, representing lower limit elevation shoreline year. upperelev, upper limit elevation shoreline year, direction indicates direction isobases used interpolating curve.","code":""},{"path":"https://isakro.github.io/shoredate/reference/interpolate_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate displacement curve to a target location within the spatial\ncoverage in south-eastern Norway — interpolate_curve","text":"","code":"# Create example point using the required coordinate system # WGS84 / zone UTM32N (EPSG: 32632) target_point <- sf::st_sfc(sf::st_point(c(579570, 6582982)), crs = 32632)  # Interpolate shoreline displacement curve to the target point location, # setting the resolution on the calendar scale to 2000 years for speed. target_curve <- interpolate_curve(target_point, cal_reso = 2000)"},{"path":"https://isakro.github.io/shoredate/reference/print.shoreline_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Print shoreline dates to console — print.shoreline_date","title":"Print shoreline dates to console — print.shoreline_date","text":"Print dates held shoreline_date object. date printed site name, elevation highest density region. isobase direction different provided default, directions dates associated printed separately.","code":""},{"path":"https://isakro.github.io/shoredate/reference/print.shoreline_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print shoreline dates to console — print.shoreline_date","text":"","code":"# S3 method for shoreline_date print(x, ...)"},{"path":"https://isakro.github.io/shoredate/reference/print.shoreline_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print shoreline dates to console — print.shoreline_date","text":"x Object class shoreline_date. ... Additional arguments.","code":""},{"path":"https://isakro.github.io/shoredate/reference/print.shoreline_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print shoreline dates to console — print.shoreline_date","text":"Print site names, elevations, non-default isobase directions HDRs contained shoreline_date object console.","code":""},{"path":"https://isakro.github.io/shoredate/reference/print.shoreline_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print shoreline dates to console — print.shoreline_date","text":"","code":"target_point <- sf::st_sfc(sf::st_point(c(538310, 6544255)), crs = 32632)  # Reduce date resolution with cal_reso and elevation_reso for speed target_date <- shoreline_date(site = target_point,                               elevation = 70,                               elev_reso = 1,                               cal_reso = 400)  # Print to console target_date #> =============== #> Site:  1 #> Elevation:  70  #>  #> 95% HDR: #> 8450 BCE-6850 BCE #> 5650 BCE-5250 BCE"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_hdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the highest density region of shoreline dates — shoredate_hdr","title":"Find the highest density region of shoreline dates — shoredate_hdr","text":"Function find 95% highest density region (HDR) provided shoreline date. Negative values denote years BCE positive values denote CE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_hdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the highest density region of shoreline dates — shoredate_hdr","text":"","code":"shoredate_hdr(bce, probability, site_name, cal_reso, prob = 0.95)"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_hdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the highest density region of shoreline dates — shoredate_hdr","text":"bce vector holding calendar years associated date. probability vector holding probability mass corresponding calendar year. site_name vector holding name site dated. cal_reso Resolution calendar scale used dating site. prob numerical value 0 1 indicating probability coverage HDR. Defaults 0.95.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_hdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the highest density region of shoreline dates — shoredate_hdr","text":"list holding start end points segments highest density region shoreline date, weighted mean date, probability coverage site name.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_hdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the highest density region of shoreline dates — shoredate_hdr","text":"","code":"target_point <- sf::st_sfc(sf::st_point(c(538310, 6544255)), crs = 32632)  # Reduce date resolution with cal_reso and elevation_reso for speed target_date <- shoreline_date(sites = target_point,                               elevation = 80,                               elev_reso = 1,                               cal_reso = 400)  # shoredate_hdr() is already called under the hood with shoreline_date(), # the result of which is printed when calling the shoreline_date object target_date #> =============== #> Site:  1 #> Elevation:  80  #>  #> 95% HDR: #> 8850 BCE-7250 BCE  # However, shoredate_hdr() can be applied separately by pulling the # necessary data from the date (shoredate_hdr(target_date[[1]][[1]]$date$bce,                target_date[[1]][[1]]$date$probability,                target_date[[1]][[1]]$site_name,                target_date[[1]][[1]]$cal_reso)) #> $start #> [1] -8850 #>  #> $end #> [1] -7250 #>  #> $prob #> [1] 0.95 #>  #> $site_name #> [1] \"1\" #>  #> $weighted_mean #> [1] -8321.197 #>"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot shoreline dates — shoredate_plot","title":"Plot shoreline dates — shoredate_plot","text":"Function plotting shoreline dates along associated metadata.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot shoreline dates — shoredate_plot","text":"","code":"shoredate_plot(   shorelinedates,   date_probability = TRUE,   date_probability_scale = 10000,   elevation_distribution = TRUE,   displacement_curve = TRUE,   site_name = FALSE,   parameters = FALSE,   isobase_direction = FALSE,   highest_density_region = TRUE,   hdr_label = TRUE,   multiplot = FALSE,   date_col = NA,   date_fill = \"darkgrey\",   displacement_col = \"red\",   displacement_fill = \"red\",   site_elevation_col = \"#046c9a\",   site_elevation_fill = \"#046c9a\",   hdr_col = \"black\",   hdr_label_xadj = 0.2,   hdr_label_yadj = 0.3,   greyscale = FALSE )"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot shoreline dates — shoredate_plot","text":"shorelinedates Object class shoreline_date. date_probability Logical value indicating whether probability distribution shoreline date plotted. Defaults TRUE. date_probability_scale Numerical constant scale probability distribution date make fit plot. Defaults 10000. elevation_distribution Logical value indicating whether distribution describing distance site shoreline displayed. Default TRUE. displacement_curve Logical value indicating whether displacement curve displayed. Default TRUE. site_name Logical value indicating whether name site printed header plot. Defaults FALSE. parameters Logical value indicating whether parameters statistical function displayed. Default FALSE. isobase_direction Logical value indicating whether direction isobases printed. Default FALSE. highest_density_region Logical value indicating whether 95% highest density region displayed. Defaults TRUE. hdr_label Logical value indicating whether numeric values highest density regions displayed. Default TRUE. multiplot Logical value indicating whether multiple dates plotted individually, collapsed single plot. graphical option multiplot set TRUE highest_density_region. Default FALSE. date_col Character value specifying outline colour probability distribution shoreline date. Defaults NA. date_fill Character value specifying fill colour probability distribution shoreline date. Defaults \"darkgrey\". displacement_col Character value specifying outline colour displacement curve. Defaults \"red\". displacement_fill Character value specifying fill colour displacement curve. Defaults \"red\". site_elevation_col Character value specifying outline colour distribution describing likely distance site shoreline. Defaults \"#046c9a\". site_elevation_fill Character value specifying fill colour distribution describing likely distance site shoreline. Defaults \"#046c9a\". hdr_col Character value specifying colour line segment giving highest density region shoreline date. Defaults \"black\". hdr_label_xadj Numerical value 0 1 specifying position HDR label x-axis. Increasing value moves label plot border. Defaults 0.2. hdr_label_yadj Numerical value 0 1 specifying position HDR label y-axis. Increasing value moves label plot border. Defaults 0.3. greyscale Logical value indicating whether plot greyscale . TRUE, overrides colour parameters. Defaults FALSE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot shoreline dates — shoredate_plot","text":"Plot(s) displaying shoreline dates associated metadata.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot shoreline dates — shoredate_plot","text":"shoredate_plot() returns plot displaying provided shoreline dates. single plot created date, range settings can adjusted display hide various parameters results. Setting parameter multiplot TRUE returns sparser version multiple dates, option whether display highest density region addition date. multiplot allow multiple isobase directions. Negative values denote years BCE positive values denote CE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot shoreline dates — shoredate_plot","text":"","code":"# Create example point with correct coordinate reference system target_point <- sf::st_sfc(sf::st_point(c(538310, 6544255)), crs = 32632)  # Reduce date resolution with cal_reso and elevation_reso for speed target_date <- shoreline_date(sites = target_point, elevation = 80,                               elev_reso = 10,                               cal_reso = 500)  shoredate_plot(target_date)"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_sumplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","title":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","text":"Function plot sum probabilities multiple shoreline dates resulting running sum_shoredates().","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_sumplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","text":"","code":"shoredate_sumplot(shoredates_sum, sample_size = TRUE)"},{"path":"https://isakro.github.io/shoredate/reference/shoredate_sumplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","text":"shoredates_sum Object class shoredates_sum. sample_size Logical indicating whether display number summed dates plot. Defaults TRUE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_sumplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","text":"line plot showing provided summed probability distribution.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoredate_sumplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the summed probability distribution of multiple shoreline dates — shoredate_sumplot","text":"","code":"# Create example points target_points <- sf::st_sfc(sf::st_point(c(538310, 6544255)),                             sf::st_point(c(538300, 6544250)))  # Set correct CRS target_points <- sf::st_as_sf(target_points, crs = 32632)  # Reduce date resolution with cal_reso and elevation_reso for speed target_dates <- shoreline_date(target_points,                                elevation = c(65, 70),                                elev_reso = 10,                                cal_reso = 750)  # Find summed probability target_sum <- sum_shoredates(target_dates)  # Call to plot shoredate_sumplot(target_sum)"},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Shoreline date — shoreline_date","title":"Shoreline date — shoreline_date","text":"function shoreline dating Stone Age sites based present-day elevation, likely elevation sea-level use trajectory past shoreline displacement. Details caveats pertaining implemented method given Roalkvam (2023).","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shoreline date — shoreline_date","text":"","code":"shoreline_date(   sites,   elevation = NA,   elev_reso = 0.01,   cal_reso = 10,   isobase_direction = 327,   sum_isobase_directions = FALSE,   model = \"gamma\",   model_parameters = c(0.286, 20.833),   elev_fun = \"mean\",   upper_temp_limit = -2500,   target_curve = NA,   hdr_prob = 0.95,   normalise = TRUE,   sparse = FALSE,   verbose = FALSE )"},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shoreline date — shoreline_date","text":"sites Vector giving one site names, , displacement curves interpolated, objects class sf representing sites dated. case spatial geometry, first column taken site name. elevation Vector numeric elevation values site elevation raster class SpatRaster package terra elevation values derived. elev_reso Numeric value specifying resolution step distribution representing distance site shoreline. Defaults 0.01m. cal_reso Numeric value specifying resolution use calendar scale. Defaults 10. isobase_direction vector numeric values defining direction(s) isobases. Defaults 327. sum_isobase_directions Logical value indicating multiple isobase directions specified isobase_direction results summed site using sum_shoredates. Defaults FALSE. model Character vector specifying statistical model model distance site shoreline. Currently accepts either \"none\" \"gamma\". Defaults \"gamma\". model_parameters Vector numeric values specifying parameters statistical model describing distance site shoreline. Defaults c(0.286, 20.833), denoting shape scale default gamma function, respectively. elev_fun Statistic define site elevation derived elevation raster. Uses terra::extract(). Defaults mean. upper_temp_limit Numerical value giving upper temporal limit. Dates start date limit returned NA. Defaults -2500, .e. 2500 BCE. target_curve Data frame holding pre-computed shoreline displacement curve. higher resolution calendar scale specified cal_reso. interpolate_curve() run nothing provided target_curve. Defaults NA. hdr_prob Numeric value specifying coverage highest density region. Defaults 0.95. normalise Logical value specifying whether shoreline date normalised sum unity. Defaults TRUE. sparse Logical value specifying site name shoreline date returned. Defaults FALSE. Note functions treatment, sparse dates compatible sum_shoredates(). verbose Logical value indicating whether progress printed console. Defaults FALSE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shoreline date — shoreline_date","text":"nested list class shoreline_date holding shoreline date results associated metadata dated site isobase direction. elements date : site_name name site. site_elev elevation site. date data frame columns bce negative values indicate years BCE positive CE, well probability, gives probability mass year. weighted_mean weighted mean date. hdr_start start values HDR ranges. hdr_end end values HDR ranges. hdr_prob probability level HDR. dispcurve data frame holding displacement curve used dating site. columns bce, giving years BCE/CE. lowerelev, lower limit elevation shoreline year. upperelev, upper limit elevation shoreline year. dispcurve_direction direction isobases use. model_parameters parameters statistical model. modeldat data frame holding model distribution. column offset denotes vertical distance (m) shoreline, specified elev_reso argument. px cumulative probability step offset, probs probability step found subtracting preceding value value px. cal_reso resolution calendar scale.","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shoreline date — shoreline_date","text":"Roalkvam, . 2023. simulation-based assessment relation Stone Age sites relative sea-level change along Norwegian Skagerrak coast. Quaternary Science Reviews 299:107880. DOI: https://doi.org/10.1016/j.quascirev.2022.107880","code":""},{"path":"https://isakro.github.io/shoredate/reference/shoreline_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shoreline date — shoreline_date","text":"","code":"# Create example point using the required CRS WGS84 UTM32N (EPSG: 32632) target_point <- sf::st_sfc(sf::st_point(c(538310, 6544255)), crs = 32632)  # Date target point, manually specifying the elevation instead of providing # an elevation raster. Reducing elev_reso and cal_reso for speed. shoreline_date(sites = target_point,                elevation = 80,                elev_reso = 1,                cal_reso = 400) #> =============== #> Site:  1 #> Elevation:  80  #>  #> 95% HDR: #> 8850 BCE-7250 BCE"},{"path":"https://isakro.github.io/shoredate/reference/sum_shoredates.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum the probability of multiple shoreline dates — sum_shoredates","title":"Sum the probability of multiple shoreline dates — sum_shoredates","text":"Function finding summed probability distribution multiple shoreline dates.","code":""},{"path":"https://isakro.github.io/shoredate/reference/sum_shoredates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum the probability of multiple shoreline dates — sum_shoredates","text":"","code":"sum_shoredates(   shoreline_dates,   cut_off = -2500,   cut_off_level = 1,   normalise = TRUE )"},{"path":"https://isakro.github.io/shoredate/reference/sum_shoredates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum the probability of multiple shoreline dates — sum_shoredates","text":"shoreline_dates Object class shoreline_date. cut_off Calendar year specifying dates cut . Defaults 2500 BCE. cut_off_level Numerical value 0 1 indicating probability mass fall cut-date excluded. Defaults 1, retaining dates. normalise Logical value indicating whether probability sum dates normalised sum unity. Defaults TRUE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/sum_shoredates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum the probability of multiple shoreline dates — sum_shoredates","text":"List class shoredate_sum holding elements: sum data frame columns bce negative values indicate years BCE positive CE, well probability, gives probability mass year. dates_n number dates make sum applying specified cut-. One date per site per isobase direction.","code":""},{"path":"https://isakro.github.io/shoredate/reference/sum_shoredates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum the probability of multiple shoreline dates — sum_shoredates","text":"","code":"target_points <- sf::st_sfc(sf::st_point(c(538310, 6544255)),                             sf::st_point(c(538300, 6544250))) target_points <- sf::st_as_sf(target_points, crs = 32632)  # Shoreline date, reducing resoltuion on elevation and calendar scales for # speed. target_dates <- shoreline_date(target_points,                                elevation = c(65, 70),                                elev_reso = 10,                                cal_reso = 500)  sum_shoredates(target_dates) #> $sum #>       bce probability #> 1  -10550 0.000000000 #> 2  -10050 0.000000000 #> 3   -9550 0.000000000 #> 4   -9050 0.000000000 #> 5   -8550 0.204938076 #> 6   -8050 0.640915936 #> 7   -7550 0.049773356 #> 8   -7050 0.035353443 #> 9   -6550 0.010428783 #> 10  -6050 0.010460665 #> 11  -5550 0.015498099 #> 12  -5050 0.010090269 #> 13  -4550 0.007648791 #> 14  -4050 0.002595957 #> 15  -3550 0.002603893 #> 16  -3050 0.002603893 #> 17  -2550 0.001389120 #> 18  -2050 0.001389120 #> 19  -1550 0.002786733 #> 20  -1050 0.000000000 #> 21   -550 0.001523868 #> 22    -50 0.000000000 #> 23    450 0.000000000 #> 24    950 0.000000000 #> 25   1450 0.000000000 #> 26   1950 0.000000000 #>  #> $dates_n #> [1] 2 #>  #> attr(,\"class\") #> [1] \"shoredates_sum\" \"list\""},{"path":"https://isakro.github.io/shoredate/reference/target_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map with target locations — target_plot","title":"Plot a map with target locations — target_plot","text":"Function plot centroids sites dated shoreline isobases employed displacement curves basemap. Defaults displaying light-weight version spatial coverage south-eastern Norway. However, spatial geometries covering regions can also provided temporarily downloaded function.","code":""},{"path":"https://isakro.github.io/shoredate/reference/target_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map with target locations — target_plot","text":"","code":"target_plot(   targets = NA,   isobases = sf::st_read(system.file(\"extdata/isobases.gpkg\", package = \"shoredate\",     mustWork = TRUE), quiet = TRUE),   basemap = sf::st_read(system.file(\"extdata/naturalearth_basemap.gpkg\", package =     \"shoredate\", mustWork = TRUE), quiet = TRUE),   crs_epsg = 32632,   naturalearth_basemap = FALSE,   naturalearth_zoom = c(20000, 20000),   target_labels = TRUE,   scalebar = TRUE,   scalebar_width = 0.4,   scalebar_style = \"ticks\",   scalebar_location = \"br\",   base_fill = \"grey\",   base_col = NA,   target_shape = 21,   target_col = \"black\",   target_fill = \"red\",   target_size = 2.25,   isobase_line = c(Horten = \"solid\", Porsgrunn = \"solid\", Tvedestrand = \"solid\", Arendal     = \"solid\"),   isobase_col = c(Arendal = \"black\", Porsgrunn = \"darkgreen\", Tvedestrand = \"blue\",     Horten = \"darkorange\"),   greyscale = FALSE )"},{"path":"https://isakro.github.io/shoredate/reference/target_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map with target locations — target_plot","text":"targets Objects class sf representing sites dated. first column beyond geom taken site name. isobases Spatial lines object class sf representing shoreline isobases. Defaults isobases direction 327 within spatial limit SE Norway, create_isobases() can used create isobases directions can passed target_plot(). basemap Object class sf representing background map. Defaults light-weight basemap spatial limit SE Norway. crs_epsg Numeric value specifying EPSG code coordinate reference system (CRS) used. Geometries different CRS re-projected. Defaults 32632, WGS 84 / UTM zone 32N (EPSG:32632). naturalearth_basemap Logical value specifying background map downloaded used basemap. Downloaded files stored base::tempdir() deleted R session closed. TRUE, overrides basemap argument. Defaults FALSE. naturalearth_zoom vector two numerical values specifying amount cropping done around provided targets naturalearth_basemap set TRUE. aware whether projected geographical CRS specified crs_epsg. Defaults c(20000, 20000). target_labels Logical value specifying whether targets labelled plot. Takes first column beyond one holding geometries represent names. present targets labelled row number. Defaults TRUE. scalebar Logical specifying whether scale bar added plot. Defaults TRUE. scalebar_width Numerical value specifying width scale bar passing width_hint argument ggspatial::annotation:scale(). Defaults 0.4. scalebar_style Character value specifying style scale bar passing style argument ggspatial::annotation:scale(). Defaults \"ticks\". scalebar_location Character value specifying location scale bar plot passing location argument ggspatial::annotation:scale(). Defaults \"br\". base_fill Character value specifying fill colour basemap. Defaults \"grey\". base_col Character value specifying outline colour basemap. Defaults NA. target_shape Numerical value specifying point shape represent centroids targets. Defaults 21. target_col Character value specifying colour parameter points represent centroids targets. Defaults \"black\". target_fill Character value specifying fill parameter points represent centroids targets. Defaults \"red\". target_size Numerical value specifying size points represent centroids targets. Defaults 2.25. isobase_line Vector character values specifying linetype used represent isobases geologically derived displacement curves. Defaults c(\"Horten\" = \"solid\", \"Porsgrunn\" = \"solid\", \"Tvedestrand\" = \"solid\", \"Arendal\" = \"solid\").` isobase_col Vector character values specifying colours used lines represent isobases geologically derived displacement curves. Defaults c(\"Arendal\" = \"black\", \"Porsgrunn\" = \"darkgreen\", \"Tvedestrand\" = \"blue\", \"Horten\" = \"darkorange\").` greyscale Logical value indicating whether plot include colours . Overrides graphical parameters set TRUE. Defaults FALSE.","code":""},{"path":"https://isakro.github.io/shoredate/reference/target_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a map with target locations — target_plot","text":"ggplot displays background map location shoreline isobases within spatial coverage south-eastern Norway, unless geometries regions provided. provided, function also plots position target locations represented centroids.","code":""},{"path":"https://isakro.github.io/shoredate/reference/target_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a map with target locations — target_plot","text":"","code":"# Display the background map and default isobases target_plot()"},{"path":"https://isakro.github.io/shoredate/news/index.html","id":"shoredate-111-2023-10-23","dir":"Changelog","previous_headings":"","what":"shoredate 1.1.1 (2023-10-23)","title":"shoredate 1.1.1 (2023-10-23)","text":"Added parameter date_probability_scale shoredate_plot() make possible adjust scaling probability distribution shoreline date better fit plot. Removed dependency rgeos (@rsbivand, #9)","code":""},{"path":"https://isakro.github.io/shoredate/news/index.html","id":"shoredate-1-1-1","dir":"Changelog","previous_headings":"","what":"shoredate 1.1.0","title":"shoredate 1.1.1 (2023-10-23)","text":"Added vignette demonstrates package can applied regions outside south-eastern Norway (@benmarwick, #6). Removed function check_target_location() set specific appropriate checks within interpolate_curve() target_plot(). Added package rnaturalearth suggests DESCRIPTION. can used target_plot() create map area world, extending transferability package (@benmarwick, #6). Made graphical parameters shoredate_plot(), displacement_plot() target_plot() variables adjusted user (@kanishkan91, #5). Adjusted geom column sf objects passed target_plot() evaluated (@kanishkan91, #2). Cleaned code reduce amount @Import @ImportFrom NAMESPACE, opting instead package::function() syntax (@kanishkan91, #4). Set pkgdown site package, served GitHub https://isakro.github.io/shoredate/ (@kanishkan91, #3).","code":""},{"path":"https://isakro.github.io/shoredate/news/index.html","id":"shoredate-1-1-1-1","dir":"Changelog","previous_headings":"","what":"shoredate 1.0.2 (2023-05-02)","title":"shoredate 1.1.1 (2023-10-23)","text":"shoredate_hdr() shoreline_date() now returns weighted mean date. shoreline_date() now parameter model, accepts either “none” “gamma”. “none” specified distance site shoreline assumed zero. Now using package ggspatial scale bar maps rather ggsn, due retiring r-spatial packages (@rsbivand, #1).","code":""},{"path":"https://isakro.github.io/shoredate/news/index.html","id":"shoredate-1-1-1-2","dir":"Changelog","previous_headings":"","what":"shoredate 1.0.1 (2023-03-06)","title":"shoredate 1.1.1 (2023-10-23)","text":"sum_shoredates() can now handle NA dates. shoreline_date() now accepts vector site names argument sites interpolated displacement curves also provided.","code":""},{"path":"https://isakro.github.io/shoredate/news/index.html","id":"shoredate-1-1-1-3","dir":"Changelog","previous_headings":"","what":"shoredate 1.0.0 (2023-01-19)","title":"shoredate 1.1.1 (2023-10-23)","text":"First release.","code":""}]
